{
    "schemaVersion": "2.0.0",
    "contractName": "OffchainAggregator",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "uint32",
                        "name": "_maximumGasPrice",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_reasonableGasPrice",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_microLinkPerEth",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_linkGweiPerObservation",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_linkGweiPerTransmission",
                        "type": "uint32"
                    },
                    {
                        "internalType": "address",
                        "name": "_link",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "_validator",
                        "type": "address"
                    },
                    {
                        "internalType": "int192",
                        "name": "_minAnswer",
                        "type": "int192"
                    },
                    {
                        "internalType": "int192",
                        "name": "_maxAnswer",
                        "type": "int192"
                    },
                    {
                        "internalType": "contract AccessControllerInterface",
                        "name": "_billingAccessController",
                        "type": "address"
                    },
                    {
                        "internalType": "contract AccessControllerInterface",
                        "name": "_requesterAccessController",
                        "type": "address"
                    },
                    {
                        "internalType": "uint8",
                        "name": "_decimals",
                        "type": "uint8"
                    },
                    {
                        "internalType": "string",
                        "name": "_description",
                        "type": "string"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "int256",
                        "name": "current",
                        "type": "int256"
                    },
                    {
                        "indexed": true,
                        "internalType": "uint256",
                        "name": "roundId",
                        "type": "uint256"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "updatedAt",
                        "type": "uint256"
                    }
                ],
                "name": "AnswerUpdated",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": false,
                        "internalType": "contract AccessControllerInterface",
                        "name": "old",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "contract AccessControllerInterface",
                        "name": "current",
                        "type": "address"
                    }
                ],
                "name": "BillingAccessControllerSet",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": false,
                        "internalType": "uint32",
                        "name": "maximumGasPrice",
                        "type": "uint32"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint32",
                        "name": "reasonableGasPrice",
                        "type": "uint32"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint32",
                        "name": "microLinkPerEth",
                        "type": "uint32"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint32",
                        "name": "linkGweiPerObservation",
                        "type": "uint32"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint32",
                        "name": "linkGweiPerTransmission",
                        "type": "uint32"
                    }
                ],
                "name": "BillingSet",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": false,
                        "internalType": "uint32",
                        "name": "previousConfigBlockNumber",
                        "type": "uint32"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint64",
                        "name": "configCount",
                        "type": "uint64"
                    },
                    {
                        "indexed": false,
                        "internalType": "address[]",
                        "name": "signers",
                        "type": "address[]"
                    },
                    {
                        "indexed": false,
                        "internalType": "address[]",
                        "name": "transmitters",
                        "type": "address[]"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint8",
                        "name": "threshold",
                        "type": "uint8"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint64",
                        "name": "encodedConfigVersion",
                        "type": "uint64"
                    },
                    {
                        "indexed": false,
                        "internalType": "bytes",
                        "name": "encoded",
                        "type": "bytes"
                    }
                ],
                "name": "ConfigSet",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "uint256",
                        "name": "roundId",
                        "type": "uint256"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "startedBy",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "startedAt",
                        "type": "uint256"
                    }
                ],
                "name": "NewRound",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "uint32",
                        "name": "aggregatorRoundId",
                        "type": "uint32"
                    },
                    {
                        "indexed": false,
                        "internalType": "int192",
                        "name": "answer",
                        "type": "int192"
                    },
                    {
                        "indexed": false,
                        "internalType": "address",
                        "name": "transmitter",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "int192[]",
                        "name": "observations",
                        "type": "int192[]"
                    },
                    {
                        "indexed": false,
                        "internalType": "bytes",
                        "name": "observers",
                        "type": "bytes"
                    },
                    {
                        "indexed": false,
                        "internalType": "bytes32",
                        "name": "rawReportContext",
                        "type": "bytes32"
                    }
                ],
                "name": "NewTransmission",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": false,
                        "internalType": "address",
                        "name": "transmitter",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "address",
                        "name": "payee",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint256",
                        "name": "amount",
                        "type": "uint256"
                    }
                ],
                "name": "OraclePaid",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "from",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                    }
                ],
                "name": "OwnershipTransferRequested",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "from",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "to",
                        "type": "address"
                    }
                ],
                "name": "OwnershipTransferred",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "transmitter",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "current",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "proposed",
                        "type": "address"
                    }
                ],
                "name": "PayeeshipTransferRequested",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "transmitter",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "previous",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "current",
                        "type": "address"
                    }
                ],
                "name": "PayeeshipTransferred",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": false,
                        "internalType": "contract AccessControllerInterface",
                        "name": "old",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "contract AccessControllerInterface",
                        "name": "current",
                        "type": "address"
                    }
                ],
                "name": "RequesterAccessControllerSet",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "requester",
                        "type": "address"
                    },
                    {
                        "indexed": false,
                        "internalType": "bytes16",
                        "name": "configDigest",
                        "type": "bytes16"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint32",
                        "name": "epoch",
                        "type": "uint32"
                    },
                    {
                        "indexed": false,
                        "internalType": "uint8",
                        "name": "round",
                        "type": "uint8"
                    }
                ],
                "name": "RoundRequested",
                "type": "event"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "previous",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "current",
                        "type": "address"
                    }
                ],
                "name": "ValidatorUpdated",
                "type": "event"
            },
            {
                "inputs": [],
                "name": "LINK",
                "outputs": [
                    {
                        "internalType": "contract LinkTokenInterface",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "acceptOwnership",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_transmitter",
                        "type": "address"
                    }
                ],
                "name": "acceptPayeeship",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "billingAccessController",
                "outputs": [
                    {
                        "internalType": "contract AccessControllerInterface",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "decimals",
                "outputs": [
                    {
                        "internalType": "uint8",
                        "name": "",
                        "type": "uint8"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "description",
                "outputs": [
                    {
                        "internalType": "string",
                        "name": "",
                        "type": "string"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "_roundId",
                        "type": "uint256"
                    }
                ],
                "name": "getAnswer",
                "outputs": [
                    {
                        "internalType": "int256",
                        "name": "",
                        "type": "int256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "getBilling",
                "outputs": [
                    {
                        "internalType": "uint32",
                        "name": "maximumGasPrice",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "reasonableGasPrice",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "microLinkPerEth",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "linkGweiPerObservation",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "linkGweiPerTransmission",
                        "type": "uint32"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint80",
                        "name": "_roundId",
                        "type": "uint80"
                    }
                ],
                "name": "getRoundData",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "roundId",
                        "type": "uint80"
                    },
                    {
                        "internalType": "int256",
                        "name": "answer",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "startedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "updatedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "answeredInRound",
                        "type": "uint80"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256",
                        "name": "_roundId",
                        "type": "uint256"
                    }
                ],
                "name": "getTimestamp",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "latestAnswer",
                "outputs": [
                    {
                        "internalType": "int256",
                        "name": "",
                        "type": "int256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "latestConfigDetails",
                "outputs": [
                    {
                        "internalType": "uint32",
                        "name": "configCount",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "blockNumber",
                        "type": "uint32"
                    },
                    {
                        "internalType": "bytes16",
                        "name": "configDigest",
                        "type": "bytes16"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "latestRound",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "latestRoundData",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "roundId",
                        "type": "uint80"
                    },
                    {
                        "internalType": "int256",
                        "name": "answer",
                        "type": "int256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "startedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "updatedAt",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint80",
                        "name": "answeredInRound",
                        "type": "uint80"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "latestTimestamp",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "latestTransmissionDetails",
                "outputs": [
                    {
                        "internalType": "bytes16",
                        "name": "configDigest",
                        "type": "bytes16"
                    },
                    {
                        "internalType": "uint32",
                        "name": "epoch",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint8",
                        "name": "round",
                        "type": "uint8"
                    },
                    {
                        "internalType": "int192",
                        "name": "latestAnswer",
                        "type": "int192"
                    },
                    {
                        "internalType": "uint64",
                        "name": "latestTimestamp",
                        "type": "uint64"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "linkAvailableForPayment",
                "outputs": [
                    {
                        "internalType": "int256",
                        "name": "availableBalance",
                        "type": "int256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "maxAnswer",
                "outputs": [
                    {
                        "internalType": "int192",
                        "name": "",
                        "type": "int192"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "minAnswer",
                "outputs": [
                    {
                        "internalType": "int192",
                        "name": "",
                        "type": "int192"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_signerOrTransmitter",
                        "type": "address"
                    }
                ],
                "name": "oracleObservationCount",
                "outputs": [
                    {
                        "internalType": "uint16",
                        "name": "",
                        "type": "uint16"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_transmitter",
                        "type": "address"
                    }
                ],
                "name": "owedPayment",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "owner",
                "outputs": [
                    {
                        "internalType": "address payable",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "requestNewRound",
                "outputs": [
                    {
                        "internalType": "uint80",
                        "name": "",
                        "type": "uint80"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "requesterAccessController",
                "outputs": [
                    {
                        "internalType": "contract AccessControllerInterface",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint32",
                        "name": "_maximumGasPrice",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_reasonableGasPrice",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_microLinkPerEth",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_linkGweiPerObservation",
                        "type": "uint32"
                    },
                    {
                        "internalType": "uint32",
                        "name": "_linkGweiPerTransmission",
                        "type": "uint32"
                    }
                ],
                "name": "setBilling",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "contract AccessControllerInterface",
                        "name": "_billingAccessController",
                        "type": "address"
                    }
                ],
                "name": "setBillingAccessController",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address[]",
                        "name": "_signers",
                        "type": "address[]"
                    },
                    {
                        "internalType": "address[]",
                        "name": "_transmitters",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint8",
                        "name": "_threshold",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint64",
                        "name": "_encodedConfigVersion",
                        "type": "uint64"
                    },
                    {
                        "internalType": "bytes",
                        "name": "_encoded",
                        "type": "bytes"
                    }
                ],
                "name": "setConfig",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address[]",
                        "name": "_transmitters",
                        "type": "address[]"
                    },
                    {
                        "internalType": "address[]",
                        "name": "_payees",
                        "type": "address[]"
                    }
                ],
                "name": "setPayees",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "contract AccessControllerInterface",
                        "name": "_requesterAccessController",
                        "type": "address"
                    }
                ],
                "name": "setRequesterAccessController",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_newValidator",
                        "type": "address"
                    }
                ],
                "name": "setValidator",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_to",
                        "type": "address"
                    }
                ],
                "name": "transferOwnership",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_transmitter",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "_proposed",
                        "type": "address"
                    }
                ],
                "name": "transferPayeeship",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "bytes",
                        "name": "_report",
                        "type": "bytes"
                    },
                    {
                        "internalType": "bytes32[]",
                        "name": "_rs",
                        "type": "bytes32[]"
                    },
                    {
                        "internalType": "bytes32[]",
                        "name": "_ss",
                        "type": "bytes32[]"
                    },
                    {
                        "internalType": "bytes32",
                        "name": "_rawVs",
                        "type": "bytes32"
                    }
                ],
                "name": "transmit",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "transmitters",
                "outputs": [
                    {
                        "internalType": "address[]",
                        "name": "",
                        "type": "address[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "validator",
                "outputs": [
                    {
                        "internalType": "contract AggregatorValidatorInterface",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "version",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_recipient",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "_amount",
                        "type": "uint256"
                    }
                ],
                "name": "withdrawFunds",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "_transmitter",
                        "type": "address"
                    }
                ],
                "name": "withdrawPayment",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "details": "For details on its operation, see the offchain reporting protocol designdoc, which refers to this contract as simply the \"contract\".",
            "events": {
                "ConfigSet(uint32,uint64,address[],address[],uint8,uint64,bytes)": {
                    "params": {
                        "configCount": "ordinal number of this config setting among all config settings over the life of this contract",
                        "encoded": "serialized data used by oracles to configure their offchain operation",
                        "encodedConfigVersion": "version of the serialization format used for \"encoded\" parameter",
                        "previousConfigBlockNumber": "block in which the previous config was set, to simplify historic analysis",
                        "signers": "ith element is address ith oracle uses to sign a report",
                        "threshold": "maximum number of faulty/dishonest oracles the protocol can tolerate while still working correctly",
                        "transmitters": "ith element is address ith oracle uses to transmit a report via the transmit method"
                    }
                },
                "NewTransmission(uint32,int192,address,int192[],bytes,bytes32)": {
                    "params": {
                        "aggregatorRoundId": "the round to which this report was assigned",
                        "answer": "median of the observations attached this report",
                        "observations": "observations transmitted with this report",
                        "rawReportContext": "signature-replay-prevention domain-separation tag",
                        "transmitter": "address from which the report was transmitted"
                    }
                },
                "RequesterAccessControllerSet(address,address)": {
                    "params": {
                        "current": "the address of the new access controller contract",
                        "old": "the address prior to the current setting"
                    }
                },
                "RoundRequested(address,bytes16,uint32,uint8)": {
                    "params": {
                        "configDigest": "the latest transmission's configDigest",
                        "epoch": "the latest transmission's epoch",
                        "requester": "the address of the requester",
                        "round": "the latest transmission's round"
                    }
                },
                "ValidatorUpdated(address,address)": {
                    "params": {
                        "current": "the new value for the address",
                        "previous": "setting of the address prior to this event"
                    }
                }
            },
            "kind": "dev",
            "methods": {
                "acceptOwnership()": {
                    "details": "Allows an ownership transfer to be completed by the recipient."
                },
                "acceptPayeeship(address)": {
                    "details": "can only be called by proposed new payee address",
                    "params": {
                        "_transmitter": "transmitter address of oracle whose payee is changing"
                    }
                },
                "billingAccessController()": {
                    "returns": {
                        "_0": "address of billingAccessController contract"
                    }
                },
                "getAnswer(uint256)": {
                    "params": {
                        "_roundId": "the aggregator round of the target report"
                    }
                },
                "getBilling()": {
                    "params": {
                        "linkGweiPerObservation": "reward to oracle for contributing an observation to a successfully transmitted report, in 1e-9LINK units",
                        "linkGweiPerTransmission": "reward to transmitter of a successful report, in 1e-9LINK units",
                        "maximumGasPrice": "highest gas price for which transmitter will be compensated",
                        "microLinkPerEth": "reimbursement per ETH of gas cost, in 1e-6LINK units",
                        "reasonableGasPrice": "transmitter will receive reward for gas prices under this value"
                    }
                },
                "getRoundData(uint80)": {
                    "params": {
                        "_roundId": "target aggregator round (NOT OCR round). Must fit in uint32"
                    },
                    "returns": {
                        "answer": "median of report from given _roundId",
                        "answeredInRound": "_roundId",
                        "roundId": "_roundId",
                        "startedAt": "timestamp of block in which report from given _roundId was transmitted",
                        "updatedAt": "timestamp of block in which report from given _roundId was transmitted"
                    }
                },
                "getTimestamp(uint256)": {
                    "params": {
                        "_roundId": "aggregator round (NOT OCR round) of target report"
                    }
                },
                "latestConfigDetails()": {
                    "returns": {
                        "blockNumber": "block at which this config was set",
                        "configCount": "ordinal number of current config, out of all configs applied to this contract so far",
                        "configDigest": "domain-separation tag for current config (see configDigestFromConfigData)"
                    }
                },
                "latestRoundData()": {
                    "returns": {
                        "answer": "median of latest report",
                        "answeredInRound": "aggregator round of latest report",
                        "roundId": "aggregator round of latest report (NOT OCR round)",
                        "startedAt": "timestamp of block containing latest report",
                        "updatedAt": "timestamp of block containing latest report"
                    }
                },
                "linkAvailableForPayment()": {
                    "returns": {
                        "availableBalance": "LINK available on this contract, after accounting for outstanding obligations. can become negative"
                    }
                },
                "oracleObservationCount(address)": {
                    "params": {
                        "_signerOrTransmitter": "address used by oracle for signing or transmitting reports"
                    }
                },
                "owedPayment(address)": {
                    "params": {
                        "_transmitter": "the transmitter address of the oracle"
                    }
                },
                "requestNewRound()": {
                    "returns": {
                        "_0": "the aggregatorRoundId of the next round. Note: The report for this round may have been transmitted (but not yet mined) *before* requestNewRound() was even called. There is *no* guarantee of causality between the request and the report at aggregatorRoundId."
                    }
                },
                "requesterAccessController()": {
                    "returns": {
                        "_0": "requester access controller address"
                    }
                },
                "setBilling(uint32,uint32,uint32,uint32,uint32)": {
                    "details": "access control provided by billingAccessController",
                    "params": {
                        "_linkGweiPerObservation": "reward to oracle for contributing an observation to a successfully transmitted report, in 1e-9LINK units",
                        "_linkGweiPerTransmission": "reward to transmitter of a successful report, in 1e-9LINK units",
                        "_maximumGasPrice": "highest gas price for which transmitter will be compensated",
                        "_microLinkPerEth": "reimbursement per ETH of gas cost, in 1e-6LINK units",
                        "_reasonableGasPrice": "transmitter will receive reward for gas prices under this value"
                    }
                },
                "setBillingAccessController(address)": {
                    "details": "only owner can call this",
                    "params": {
                        "_billingAccessController": "new billingAccessController contract address"
                    }
                },
                "setConfig(address[],address[],uint8,uint64,bytes)": {
                    "params": {
                        "_encoded": "encoded off-chain oracle configuration",
                        "_encodedConfigVersion": "version number for offchainEncoding schema",
                        "_signers": "addresses with which oracles sign the reports",
                        "_threshold": "number of faulty oracles the system can tolerate",
                        "_transmitters": "addresses oracles use to transmit the reports"
                    }
                },
                "setPayees(address[],address[])": {
                    "details": "must be called by ownercannot be used to change payee addresses, only to initially populate them",
                    "params": {
                        "_payees": "addresses of payees corresponding to list of transmitters",
                        "_transmitters": "addresses oracles use to transmit the reports"
                    }
                },
                "setRequesterAccessController(address)": {
                    "params": {
                        "_requesterAccessController": "designates the address of the new requester access controller"
                    }
                },
                "setValidator(address)": {
                    "params": {
                        "_newValidator": "designates the address of the new validation contract"
                    }
                },
                "transferOwnership(address)": {
                    "details": "Allows an owner to begin transferring ownership to a new address, pending."
                },
                "transferPayeeship(address,address)": {
                    "details": "can only be called by payee address",
                    "params": {
                        "_proposed": "new payee address",
                        "_transmitter": "transmitter address of oracle whose payee is changing"
                    }
                },
                "transmit(bytes,bytes32[],bytes32[],bytes32)": {
                    "params": {
                        "_rawVs": "ith element is the the V component of the ith signature",
                        "_report": "serialized report, which the signatures are signing. See parsing code below for format. The ith element of the observers component must be the index in s_signers of the address for the ith signature",
                        "_rs": "ith element is the R components of the ith signature on report. Must have at most maxNumOracles entries",
                        "_ss": "ith element is the S components of the ith signature on report. Must have at most maxNumOracles entries"
                    }
                },
                "transmitters()": {
                    "details": "The list will match the order used to specify the transmitter during setConfig",
                    "returns": {
                        "_0": "list of addresses permitted to transmit reports to this contract"
                    }
                },
                "validator()": {
                    "returns": {
                        "_0": "validator address"
                    }
                },
                "withdrawFunds(address,uint256)": {
                    "details": "access control provided by billingAccessController",
                    "params": {
                        "_amount": "maximum amount to withdraw, denominated in LINK-wei.",
                        "_recipient": "address to send funds to"
                    }
                },
                "withdrawPayment(address)": {
                    "details": "must be called by oracle's payee address",
                    "params": {
                        "_transmitter": "the transmitter address of the oracle"
                    }
                }
            },
            "stateVariables": {
                "decimals": {
                    "return": "answers are stored in fixed-point format, with this many digits of precision"
                }
            },
            "version": 1
        },
        "evm": {
            "methodIdentifiers": {
                "LINK()": "1b6b6d23",
                "acceptOwnership()": "79ba5097",
                "acceptPayeeship(address)": "b121e147",
                "billingAccessController()": "996e8298",
                "decimals()": "313ce567",
                "description()": "7284e416",
                "getAnswer(uint256)": "b5ab58dc",
                "getBilling()": "29937268",
                "getRoundData(uint80)": "9a6fc8f5",
                "getTimestamp(uint256)": "b633620c",
                "latestAnswer()": "50d25bcd",
                "latestConfigDetails()": "81ff7048",
                "latestRound()": "668a0f02",
                "latestRoundData()": "feaf968c",
                "latestTimestamp()": "8205bf6a",
                "latestTransmissionDetails()": "e5fe4577",
                "linkAvailableForPayment()": "d09dc339",
                "maxAnswer()": "70da2f67",
                "minAnswer()": "22adbc78",
                "oracleObservationCount(address)": "e4902f82",
                "owedPayment(address)": "0eafb25b",
                "owner()": "8da5cb5b",
                "requestNewRound()": "98e5b12a",
                "requesterAccessController()": "70efdf2d",
                "setBilling(uint32,uint32,uint32,uint32,uint32)": "bd824706",
                "setBillingAccessController(address)": "fbffd2c1",
                "setConfig(address[],address[],uint8,uint64,bytes)": "585aa7de",
                "setPayees(address[],address[])": "9c849b30",
                "setRequesterAccessController(address)": "9e3ceeab",
                "setValidator(address)": "1327d3d8",
                "transferOwnership(address)": "f2fde38b",
                "transferPayeeship(address,address)": "eb5dcd6c",
                "transmit(bytes,bytes32[],bytes32[],bytes32)": "c9807539",
                "transmitters()": "81411834",
                "validator()": "3a5381b5",
                "version()": "54fd4d50",
                "withdrawFunds(address,uint256)": "c1075329",
                "withdrawPayment(address)": "8ac28d5a"
            }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_maximumGasPrice\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_reasonableGasPrice\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_microLinkPerEth\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_linkGweiPerObservation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_linkGweiPerTransmission\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"internalType\":\"int192\",\"name\":\"_minAnswer\",\"type\":\"int192\"},{\"internalType\":\"int192\",\"name\":\"_maxAnswer\",\"type\":\"int192\"},{\"internalType\":\"contract AccessControllerInterface\",\"name\":\"_billingAccessController\",\"type\":\"address\"},{\"internalType\":\"contract AccessControllerInterface\",\"name\":\"_requesterAccessController\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AccessControllerInterface\",\"name\":\"old\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract AccessControllerInterface\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"BillingAccessControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maximumGasPrice\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"reasonableGasPrice\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"microLinkPerEth\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"linkGweiPerObservation\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"linkGweiPerTransmission\",\"type\":\"uint32\"}],\"name\":\"BillingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"previousConfigBlockNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"configCount\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"transmitters\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"encodedConfigVersion\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"aggregatorRoundId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"int192\",\"name\":\"answer\",\"type\":\"int192\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int192[]\",\"name\":\"observations\",\"type\":\"int192[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"observers\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"rawReportContext\",\"type\":\"bytes32\"}],\"name\":\"NewTransmission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OraclePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposed\",\"type\":\"address\"}],\"name\":\"PayeeshipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"PayeeshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AccessControllerInterface\",\"name\":\"old\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract AccessControllerInterface\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"RequesterAccessControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes16\",\"name\":\"configDigest\",\"type\":\"bytes16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"round\",\"type\":\"uint8\"}],\"name\":\"RoundRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"ValidatorUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transmitter\",\"type\":\"address\"}],\"name\":\"acceptPayeeship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"billingAccessController\",\"outputs\":[{\"internalType\":\"contract AccessControllerInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBilling\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"maximumGasPrice\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"reasonableGasPrice\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"microLinkPerEth\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"linkGweiPerObservation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"linkGweiPerTransmission\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestConfigDetails\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"configCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes16\",\"name\":\"configDigest\",\"type\":\"bytes16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTransmissionDetails\",\"outputs\":[{\"internalType\":\"bytes16\",\"name\":\"configDigest\",\"type\":\"bytes16\"},{\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"round\",\"type\":\"uint8\"},{\"internalType\":\"int192\",\"name\":\"latestAnswer\",\"type\":\"int192\"},{\"internalType\":\"uint64\",\"name\":\"latestTimestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkAvailableForPayment\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAnswer\",\"outputs\":[{\"internalType\":\"int192\",\"name\":\"\",\"type\":\"int192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAnswer\",\"outputs\":[{\"internalType\":\"int192\",\"name\":\"\",\"type\":\"int192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signerOrTransmitter\",\"type\":\"address\"}],\"name\":\"oracleObservationCount\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transmitter\",\"type\":\"address\"}],\"name\":\"owedPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNewRound\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requesterAccessController\",\"outputs\":[{\"internalType\":\"contract AccessControllerInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_maximumGasPrice\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_reasonableGasPrice\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_microLinkPerEth\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_linkGweiPerObservation\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_linkGweiPerTransmission\",\"type\":\"uint32\"}],\"name\":\"setBilling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AccessControllerInterface\",\"name\":\"_billingAccessController\",\"type\":\"address\"}],\"name\":\"setBillingAccessController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_transmitters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"_threshold\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"_encodedConfigVersion\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_encoded\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_transmitters\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_payees\",\"type\":\"address[]\"}],\"name\":\"setPayees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AccessControllerInterface\",\"name\":\"_requesterAccessController\",\"type\":\"address\"}],\"name\":\"setRequesterAccessController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newValidator\",\"type\":\"address\"}],\"name\":\"setValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transmitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proposed\",\"type\":\"address\"}],\"name\":\"transferPayeeship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_report\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"_rs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_ss\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"_rawVs\",\"type\":\"bytes32\"}],\"name\":\"transmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transmitters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"contract AggregatorValidatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transmitter\",\"type\":\"address\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"For details on its operation, see the offchain reporting protocol designdoc, which refers to this contract as simply the \\\"contract\\\".\",\"events\":{\"ConfigSet(uint32,uint64,address[],address[],uint8,uint64,bytes)\":{\"params\":{\"configCount\":\"ordinal number of this config setting among all config settings over the life of this contract\",\"encoded\":\"serialized data used by oracles to configure their offchain operation\",\"encodedConfigVersion\":\"version of the serialization format used for \\\"encoded\\\" parameter\",\"previousConfigBlockNumber\":\"block in which the previous config was set, to simplify historic analysis\",\"signers\":\"ith element is address ith oracle uses to sign a report\",\"threshold\":\"maximum number of faulty/dishonest oracles the protocol can tolerate while still working correctly\",\"transmitters\":\"ith element is address ith oracle uses to transmit a report via the transmit method\"}},\"NewTransmission(uint32,int192,address,int192[],bytes,bytes32)\":{\"params\":{\"aggregatorRoundId\":\"the round to which this report was assigned\",\"answer\":\"median of the observations attached this report\",\"observations\":\"observations transmitted with this report\",\"rawReportContext\":\"signature-replay-prevention domain-separation tag\",\"transmitter\":\"address from which the report was transmitted\"}},\"RequesterAccessControllerSet(address,address)\":{\"params\":{\"current\":\"the address of the new access controller contract\",\"old\":\"the address prior to the current setting\"}},\"RoundRequested(address,bytes16,uint32,uint8)\":{\"params\":{\"configDigest\":\"the latest transmission's configDigest\",\"epoch\":\"the latest transmission's epoch\",\"requester\":\"the address of the requester\",\"round\":\"the latest transmission's round\"}},\"ValidatorUpdated(address,address)\":{\"params\":{\"current\":\"the new value for the address\",\"previous\":\"setting of the address prior to this event\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptPayeeship(address)\":{\"details\":\"can only be called by proposed new payee address\",\"params\":{\"_transmitter\":\"transmitter address of oracle whose payee is changing\"}},\"billingAccessController()\":{\"returns\":{\"_0\":\"address of billingAccessController contract\"}},\"getAnswer(uint256)\":{\"params\":{\"_roundId\":\"the aggregator round of the target report\"}},\"getBilling()\":{\"params\":{\"linkGweiPerObservation\":\"reward to oracle for contributing an observation to a successfully transmitted report, in 1e-9LINK units\",\"linkGweiPerTransmission\":\"reward to transmitter of a successful report, in 1e-9LINK units\",\"maximumGasPrice\":\"highest gas price for which transmitter will be compensated\",\"microLinkPerEth\":\"reimbursement per ETH of gas cost, in 1e-6LINK units\",\"reasonableGasPrice\":\"transmitter will receive reward for gas prices under this value\"}},\"getRoundData(uint80)\":{\"params\":{\"_roundId\":\"target aggregator round (NOT OCR round). Must fit in uint32\"},\"returns\":{\"answer\":\"median of report from given _roundId\",\"answeredInRound\":\"_roundId\",\"roundId\":\"_roundId\",\"startedAt\":\"timestamp of block in which report from given _roundId was transmitted\",\"updatedAt\":\"timestamp of block in which report from given _roundId was transmitted\"}},\"getTimestamp(uint256)\":{\"params\":{\"_roundId\":\"aggregator round (NOT OCR round) of target report\"}},\"latestConfigDetails()\":{\"returns\":{\"blockNumber\":\"block at which this config was set\",\"configCount\":\"ordinal number of current config, out of all configs applied to this contract so far\",\"configDigest\":\"domain-separation tag for current config (see configDigestFromConfigData)\"}},\"latestRoundData()\":{\"returns\":{\"answer\":\"median of latest report\",\"answeredInRound\":\"aggregator round of latest report\",\"roundId\":\"aggregator round of latest report (NOT OCR round)\",\"startedAt\":\"timestamp of block containing latest report\",\"updatedAt\":\"timestamp of block containing latest report\"}},\"linkAvailableForPayment()\":{\"returns\":{\"availableBalance\":\"LINK available on this contract, after accounting for outstanding obligations. can become negative\"}},\"oracleObservationCount(address)\":{\"params\":{\"_signerOrTransmitter\":\"address used by oracle for signing or transmitting reports\"}},\"owedPayment(address)\":{\"params\":{\"_transmitter\":\"the transmitter address of the oracle\"}},\"requestNewRound()\":{\"returns\":{\"_0\":\"the aggregatorRoundId of the next round. Note: The report for this round may have been transmitted (but not yet mined) *before* requestNewRound() was even called. There is *no* guarantee of causality between the request and the report at aggregatorRoundId.\"}},\"requesterAccessController()\":{\"returns\":{\"_0\":\"requester access controller address\"}},\"setBilling(uint32,uint32,uint32,uint32,uint32)\":{\"details\":\"access control provided by billingAccessController\",\"params\":{\"_linkGweiPerObservation\":\"reward to oracle for contributing an observation to a successfully transmitted report, in 1e-9LINK units\",\"_linkGweiPerTransmission\":\"reward to transmitter of a successful report, in 1e-9LINK units\",\"_maximumGasPrice\":\"highest gas price for which transmitter will be compensated\",\"_microLinkPerEth\":\"reimbursement per ETH of gas cost, in 1e-6LINK units\",\"_reasonableGasPrice\":\"transmitter will receive reward for gas prices under this value\"}},\"setBillingAccessController(address)\":{\"details\":\"only owner can call this\",\"params\":{\"_billingAccessController\":\"new billingAccessController contract address\"}},\"setConfig(address[],address[],uint8,uint64,bytes)\":{\"params\":{\"_encoded\":\"encoded off-chain oracle configuration\",\"_encodedConfigVersion\":\"version number for offchainEncoding schema\",\"_signers\":\"addresses with which oracles sign the reports\",\"_threshold\":\"number of faulty oracles the system can tolerate\",\"_transmitters\":\"addresses oracles use to transmit the reports\"}},\"setPayees(address[],address[])\":{\"details\":\"must be called by ownercannot be used to change payee addresses, only to initially populate them\",\"params\":{\"_payees\":\"addresses of payees corresponding to list of transmitters\",\"_transmitters\":\"addresses oracles use to transmit the reports\"}},\"setRequesterAccessController(address)\":{\"params\":{\"_requesterAccessController\":\"designates the address of the new requester access controller\"}},\"setValidator(address)\":{\"params\":{\"_newValidator\":\"designates the address of the new validation contract\"}},\"transferOwnership(address)\":{\"details\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"transferPayeeship(address,address)\":{\"details\":\"can only be called by payee address\",\"params\":{\"_proposed\":\"new payee address\",\"_transmitter\":\"transmitter address of oracle whose payee is changing\"}},\"transmit(bytes,bytes32[],bytes32[],bytes32)\":{\"params\":{\"_rawVs\":\"ith element is the the V component of the ith signature\",\"_report\":\"serialized report, which the signatures are signing. See parsing code below for format. The ith element of the observers component must be the index in s_signers of the address for the ith signature\",\"_rs\":\"ith element is the R components of the ith signature on report. Must have at most maxNumOracles entries\",\"_ss\":\"ith element is the S components of the ith signature on report. Must have at most maxNumOracles entries\"}},\"transmitters()\":{\"details\":\"The list will match the order used to specify the transmitter during setConfig\",\"returns\":{\"_0\":\"list of addresses permitted to transmit reports to this contract\"}},\"validator()\":{\"returns\":{\"_0\":\"validator address\"}},\"withdrawFunds(address,uint256)\":{\"details\":\"access control provided by billingAccessController\",\"params\":{\"_amount\":\"maximum amount to withdraw, denominated in LINK-wei.\",\"_recipient\":\"address to send funds to\"}},\"withdrawPayment(address)\":{\"details\":\"must be called by oracle's payee address\",\"params\":{\"_transmitter\":\"the transmitter address of the oracle\"}}},\"stateVariables\":{\"decimals\":{\"return\":\"answers are stored in fixed-point format, with this many digits of precision\"}},\"version\":1},\"userdoc\":{\"events\":{\"BillingAccessControllerSet(address,address)\":{\"notice\":\"emitted when a new access-control contract is set\"},\"BillingSet(uint32,uint32,uint32,uint32,uint32)\":{\"notice\":\"emitted when billing parameters are set\"},\"ConfigSet(uint32,uint64,address[],address[],uint8,uint64,bytes)\":{\"notice\":\"triggers a new run of the offchain reporting protocol\"},\"NewTransmission(uint32,int192,address,int192[],bytes,bytes32)\":{\"notice\":\"indicates that a new report was transmitted\"},\"OraclePaid(address,address,uint256)\":{\"notice\":\"emitted when an oracle has been paid LINK\"},\"PayeeshipTransferRequested(address,address,address)\":{\"notice\":\"emitted when a transfer of an oracle's payee address has been initiated\"},\"PayeeshipTransferred(address,address,address)\":{\"notice\":\"emitted when a transfer of an oracle's payee address has been completed\"},\"RequesterAccessControllerSet(address,address)\":{\"notice\":\"emitted when a new requester access controller contract is set\"},\"RoundRequested(address,bytes16,uint32,uint8)\":{\"notice\":\"emitted to immediately request a new round\"},\"ValidatorUpdated(address,address)\":{\"notice\":\"indicates that the address of the validator contract has been set\"}},\"kind\":\"user\",\"methods\":{\"acceptPayeeship(address)\":{\"notice\":\"second step of payeeship transfer (safe transfer pattern)\"},\"billingAccessController()\":{\"notice\":\"gets billingAccessController\"},\"description()\":{\"notice\":\"human-readable description of observable this contract is reporting on\"},\"getAnswer(uint256)\":{\"notice\":\"median of report from given aggregator round (NOT OCR round)\"},\"getBilling()\":{\"notice\":\"gets billing parameters\"},\"getRoundData(uint80)\":{\"notice\":\"details for the given aggregator round\"},\"getTimestamp(uint256)\":{\"notice\":\"timestamp of block in which report from given aggregator round was transmitted\"},\"latestAnswer()\":{\"notice\":\"median from the most recent report\"},\"latestConfigDetails()\":{\"notice\":\"information about current offchain reporting protocol configuration\"},\"latestRound()\":{\"notice\":\"Aggregator round (NOT OCR round) in which last report was transmitted\"},\"latestRoundData()\":{\"notice\":\"aggregator details for the most recently transmitted report\"},\"latestTimestamp()\":{\"notice\":\"timestamp of block in which last report was transmitted\"},\"linkAvailableForPayment()\":{\"notice\":\"allows oracles to check that sufficient LINK balance is available\"},\"oracleObservationCount(address)\":{\"notice\":\"number of observations oracle is due to be reimbursed for\"},\"owedPayment(address)\":{\"notice\":\"query an oracle's payment amount\"},\"requestNewRound()\":{\"notice\":\"immediately requests a new round\"},\"requesterAccessController()\":{\"notice\":\"address of the requester access controller contract\"},\"setBilling(uint32,uint32,uint32,uint32,uint32)\":{\"notice\":\"sets billing parameters\"},\"setBillingAccessController(address)\":{\"notice\":\"sets billingAccessController\"},\"setConfig(address[],address[],uint8,uint64,bytes)\":{\"notice\":\"sets offchain reporting protocol configuration incl. participating oracles\"},\"setPayees(address[],address[])\":{\"notice\":\"sets the payees for transmitting addresses\"},\"setRequesterAccessController(address)\":{\"notice\":\"sets the requester access controller\"},\"setValidator(address)\":{\"notice\":\"sets the address which does external data validation\"},\"transferPayeeship(address,address)\":{\"notice\":\"first step of payeeship transfer (safe transfer pattern)\"},\"transmit(bytes,bytes32[],bytes32[],bytes32)\":{\"notice\":\"transmit is called to post a new report to the contract\"},\"validator()\":{\"notice\":\"address of the contract which does external data validation\"},\"version()\":{\"notice\":\"aggregator contract version\"},\"withdrawFunds(address,uint256)\":{\"notice\":\"withdraw any available funds left in the contract, up to _amount, after accounting for the funds due to participants in past reports\"},\"withdrawPayment(address)\":{\"notice\":\"withdraws an oracle's payment from the contract\"}},\"notice\":\"Onchain verification of reports from the offchain reporting protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/OffchainAggregator.sol\":\"OffchainAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/AccessControllerInterface.sol\":{\"keccak256\":\"0xd4ceebdd967741e37faa51ae1a2991e5cda04814a7969942bb8b9f2ae9ee7ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4357a64c1ea99072d7e8b70f8016b69e58a8e4e0b499c7bce8d7e2d5bc4acf33\",\"dweb:/ipfs/QmPjf68erjuBk4D4WAUBRwfe5H39BrbpqLXJonbBbFKdkr\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/AggregatorInterface.sol\":{\"keccak256\":\"0xba09dc6311d25eeff790a255c664b841aa6fd1b96b27325b6822770614420b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d00f04715de3285925cc5b7584fdd7b46511b05941ae192a42cf3085983029c9\",\"dweb:/ipfs/QmQf9ZVv5ecrfNhyk2MKVh2JeSaupLP28pdZPJHXxeJrm5\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x77eb17583f7c63473bc8f5c2aa0985856c81f389a0940d6bef975a68743cefd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9705839ab4c72e14f1588e612b5156bf03ab185b895e366b8ef11c6fde14739\",\"dweb:/ipfs/QmQ9atxSPC5JDRxgpsEyFaij9SuhKcoiD2T4qtyp2qMc3R\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/AggregatorV3Interface.sol\":{\"keccak256\":\"0xbf591ea627b0a65983211294c476c3c199fff6e31a9894d35b0dc56bac915fc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72f810191e4ca2b111e511d344638f6476f39c169a4525544c50f88977d46aae\",\"dweb:/ipfs/QmNjnjTUjKyPqzae3dBdzVJfhPh3FasP4RVVkvvbFNSTgN\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/AggregatorValidatorInterface.sol\":{\"keccak256\":\"0xf14fcf8c739f615cbb76b697a529b2ad9f4aee5eb49d9b8daaf4c0a9faf92e23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5d517868a672120830d228214e279e520fe3cd3ae226d72209b71de2d7c3fa8\",\"dweb:/ipfs/QmPXhFv79TePzmvnQ2zxZwohZBGMYXDMZtvC5XwTRBpKtN\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/LinkTokenInterface.sol\":{\"keccak256\":\"0x30a1a6b40a9481e3fea668b0f7a6a5de9477e9980f301544322824e612121c6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2130bc6be764795c3344f620721ba513b73f82ea7bb8204c9127da15959bafd\",\"dweb:/ipfs/QmNnPKkP5UA1GGSoAVaTPD7gMpqPTsbRMNRzt2cXE5aWj6\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/OffchainAggregator.sol\":{\"keccak256\":\"0x3a77d0220eaaad901c2239ae9a9c4372667b95e04fa9b6a7cbcd1eac78f26c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffaafdb01095aa20336479f4115feb8e6b4716fda1452ca1ebb793e1f683b8e2\",\"dweb:/ipfs/QmX47RBYvSJcY2YJPePcCmKWCyrQA7DWC7ejikRxrqaXsq\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/OffchainAggregatorBilling.sol\":{\"keccak256\":\"0x8971b615cefb48bf4529d00375610490ade959b51e017f864a8c9b733934f204\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://448d4f7966f2a834f4c79e2e1928100dc9a7f3adf596b3b2021fdb46559093ea\",\"dweb:/ipfs/QmYsVyQDFoh4xWJbAYgr6GMEMJTfx2pVKSiguuNKHw7Fan\"]},\"/home/spook/projects/chainlink/chainlink/evm-contracts/src/OCR/Owned.sol\":{\"keccak256\":\"0x27ab2db466e4b50ea3992daf2048716227a7eff9c3af1445b06777ef05a5f7b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3472b52b535bbe1e38ee6698c422afade4514e22a00ba5f32c7596443a8fdb0\",\"dweb:/ipfs/QmaM9CR1VpN1fDPqQcdry83VuWZokaVXKu8SsBBPQbivGa\"]}},\"version\":1}",
        "userdoc": {
            "events": {
                "BillingAccessControllerSet(address,address)": {
                    "notice": "emitted when a new access-control contract is set"
                },
                "BillingSet(uint32,uint32,uint32,uint32,uint32)": {
                    "notice": "emitted when billing parameters are set"
                },
                "ConfigSet(uint32,uint64,address[],address[],uint8,uint64,bytes)": {
                    "notice": "triggers a new run of the offchain reporting protocol"
                },
                "NewTransmission(uint32,int192,address,int192[],bytes,bytes32)": {
                    "notice": "indicates that a new report was transmitted"
                },
                "OraclePaid(address,address,uint256)": {
                    "notice": "emitted when an oracle has been paid LINK"
                },
                "PayeeshipTransferRequested(address,address,address)": {
                    "notice": "emitted when a transfer of an oracle's payee address has been initiated"
                },
                "PayeeshipTransferred(address,address,address)": {
                    "notice": "emitted when a transfer of an oracle's payee address has been completed"
                },
                "RequesterAccessControllerSet(address,address)": {
                    "notice": "emitted when a new requester access controller contract is set"
                },
                "RoundRequested(address,bytes16,uint32,uint8)": {
                    "notice": "emitted to immediately request a new round"
                },
                "ValidatorUpdated(address,address)": {
                    "notice": "indicates that the address of the validator contract has been set"
                }
            },
            "kind": "user",
            "methods": {
                "acceptPayeeship(address)": {
                    "notice": "second step of payeeship transfer (safe transfer pattern)"
                },
                "billingAccessController()": {
                    "notice": "gets billingAccessController"
                },
                "description()": {
                    "notice": "human-readable description of observable this contract is reporting on"
                },
                "getAnswer(uint256)": {
                    "notice": "median of report from given aggregator round (NOT OCR round)"
                },
                "getBilling()": {
                    "notice": "gets billing parameters"
                },
                "getRoundData(uint80)": {
                    "notice": "details for the given aggregator round"
                },
                "getTimestamp(uint256)": {
                    "notice": "timestamp of block in which report from given aggregator round was transmitted"
                },
                "latestAnswer()": {
                    "notice": "median from the most recent report"
                },
                "latestConfigDetails()": {
                    "notice": "information about current offchain reporting protocol configuration"
                },
                "latestRound()": {
                    "notice": "Aggregator round (NOT OCR round) in which last report was transmitted"
                },
                "latestRoundData()": {
                    "notice": "aggregator details for the most recently transmitted report"
                },
                "latestTimestamp()": {
                    "notice": "timestamp of block in which last report was transmitted"
                },
                "linkAvailableForPayment()": {
                    "notice": "allows oracles to check that sufficient LINK balance is available"
                },
                "oracleObservationCount(address)": {
                    "notice": "number of observations oracle is due to be reimbursed for"
                },
                "owedPayment(address)": {
                    "notice": "query an oracle's payment amount"
                },
                "requestNewRound()": {
                    "notice": "immediately requests a new round"
                },
                "requesterAccessController()": {
                    "notice": "address of the requester access controller contract"
                },
                "setBilling(uint32,uint32,uint32,uint32,uint32)": {
                    "notice": "sets billing parameters"
                },
                "setBillingAccessController(address)": {
                    "notice": "sets billingAccessController"
                },
                "setConfig(address[],address[],uint8,uint64,bytes)": {
                    "notice": "sets offchain reporting protocol configuration incl. participating oracles"
                },
                "setPayees(address[],address[])": {
                    "notice": "sets the payees for transmitting addresses"
                },
                "setRequesterAccessController(address)": {
                    "notice": "sets the requester access controller"
                },
                "setValidator(address)": {
                    "notice": "sets the address which does external data validation"
                },
                "transferPayeeship(address,address)": {
                    "notice": "first step of payeeship transfer (safe transfer pattern)"
                },
                "transmit(bytes,bytes32[],bytes32[],bytes32)": {
                    "notice": "transmit is called to post a new report to the contract"
                },
                "validator()": {
                    "notice": "address of the contract which does external data validation"
                },
                "version()": {
                    "notice": "aggregator contract version"
                },
                "withdrawFunds(address,uint256)": {
                    "notice": "withdraw any available funds left in the contract, up to _amount, after accounting for the funds due to participants in past reports"
                },
                "withdrawPayment(address)": {
                    "notice": "withdraws an oracle's payment from the contract"
                }
            },
            "notice": "Onchain verification of reports from the offchain reporting protocol",
            "version": 1
        }
    },
    "sources": {
        "OffchainAggregator.sol": {
            "id": 7
        },
        "AccessControllerInterface.sol": {
            "id": 1
        },
        "AggregatorV2V3Interface.sol": {
            "id": 3
        },
        "AggregatorInterface.sol": {
            "id": 2
        },
        "AggregatorV3Interface.sol": {
            "id": 4
        },
        "AggregatorValidatorInterface.sol": {
            "id": 5
        },
        "LinkTokenInterface.sol": {
            "id": 6
        },
        "Owned.sol": {
            "id": 9
        },
        "OffchainAggregatorBilling.sol": {
            "id": 8
        }
    },
    "sourceTreeHashHex": "0xa82d408b44fdcc271346e618d120c79effc9254e32dce2fe1755e3eb33dac78f",
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.7.6+commit.7338295f.js",
        "settings": {
            "optimizer": {
                "runs": 1000000,
                "enabled": true
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "userdoc",
                        "evm.methodIdentifiers",
                        "metadata"
                    ]
                }
            },
            "remappings": []
        }
    },
    "chains": {}
}